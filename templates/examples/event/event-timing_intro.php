<p>As web pages get richer, they tend to get slower.  One way to make your pages as responsive as possible is to carefully storyboard the page-load and page-paint processes so that the interactions most central to the page's purpose are enabled as early as possible.  The window object's <code>load</code> event won't happen until the full DOM and all image data have loaded.  Putting off script execution until after the page loads can be optimal for some scripts, but sometimes you won't want to wait that long to make something <a href="http://developer.yahoo.com/yui/dragdrop/">draggable</a>, to load a <a href="http://developer.yahoo.com/yui/calendar/">Calendar Control</a>, to draw a <a href="http://developer.yahoo.com/yui/tabview/">Tabview</a>, and so on.</p>

<p><a href="http://developer.yahoo.com/yui/event/">The YUI Event Utility</a> gives you three additional interesting moments that occur during a page's load process: </p>
<ol>
  <li><code><strong>onAvailable:</strong></code> <code><a href="http://developer.yahoo.com/yui/event/#onavailable">onAvailable</a></code> targets a single element and fires when that element is available (when it responds to <code>document.getElementById()</code>) &mdash; but you can't count on the element's children having been loaded at this point.</li>
  <li><code><strong>onContentReady:</strong></code> When you care about not just your target element but its children as well, use <code><a href="http://developer.yahoo.com/yui/event/#onavailable">onContentReady</a></code>. This method will tell you that your target element and all of its children are present in the DOM. </li>
  <li><code><strong>onDOMReady:</strong></code> Some DOM scripting operations cannot be performed safely until the page's entire DOM has loaded. <code><a href="http://developer.yahoo.com/yui/event/#ondomready">onDOMReady</a></code> will let you know that the DOM is fully loaded and ready for you to modify  via script.</li>
</ol>
<p>In the example box below, <code>onAvailable</code>, <code>onContentReady</code> and <code>onDOMReady</code> are all in use.  A <code>&lt;div&gt;</code> (with a green background) loads; it has 100 chidren; one of those children is an arbitrarily large image that will take awhile to load. Keep an eye on the logger console at right. You'll see that the <code>&lt;div&gt;</code> (1) becomes available, (2) its content becomes ready (after all of its 100 children have loaded), (3) the DOM becomes ready, and finally (4) the page loads. (<strong>Note:</strong> In the Logger console, newer messages appear at the top.)</p>
