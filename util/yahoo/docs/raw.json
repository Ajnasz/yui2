{"classmap": {"YAHOO": {"name": "YAHOO", "namespace": "", "module": "yahoo", "guessedname": "YAHOO", "methods": {"augment": {"static": "", "params": [{"type": "Function", "name": "r", "description": "  the object to receive the augmentation"}, {"type": "Function", "name": "s", "description": "  the object that supplies the properties to augment"}, {"type": "String*", "name": "arguments", "description": " zero or more properties methods to augment the\nreceiver with.  If none specified, everything\nin the supplier will be used unless it would\noverwrite an existing property in the receiver"}], "description": "Applies all prototype properties in the supplier to the receiver if the\nreceiver does not have these properties yet.  Optionally, one or more\nmethods\/properties can be specified (as additional parameters).  This\noption will overwrite the property if receiver has it already.", "guessedname": "augment", "guessedtype": "function"}, "compose": {"return": {"type": "Object", "description": "the new object"}, "description": "Returns an object composed of the two objects passed in.  Properties in\nobject a will have priority over those in object b.  Optionally, one\nor more properties can be provided as additional parameters.  If specified,\nonly those properties will be copied from object b, and these will overwrite\nthe property in object a if it exists.", "static": "", "guessedname": "compose", "guessedtype": "function", "params": [{"type": "Object", "name": "a", "description": "  the base object for the composition"}, {"type": "Object", "name": "b", "description": "  the object that contains additional properties to apply\nto the composition"}, {"type": "String*", "name": "arguments", "description": " zero or more properties methods to add to the\ncomposition.  If none specified, everything\nin object b will be copied unless it would\noverwrite an existing property in object a."}]}, "namespace": {"return": {"type": "Object", "description": "A reference to the last namespace object created"}, "description": "Returns the namespace specified and creates it if it doesn't exist\n<pre>\nYAHOO.namespace(\"property.package\");\nYAHOO.namespace(\"YAHOO.property.package\");\n<\/pre>\nEither of the above would create YAHOO.property, then\nYAHOO.property.package\nBe careful when naming packages. Reserved words may work in some browsers\nand not others. For instance, the following will fail in Safari:\n<pre>\nYAHOO.namespace(\"really.long.nested.namespace\");\n<\/pre>\nThis fails because \"long\" is a future reserved word in ECMAScript", "static": "", "guessedname": "namespace", "guessedtype": "function", "params": [{"type": "String*", "name": "arguments", "description": " 1-n namespaces to create"}]}, "log": {"return": {"type": "Boolean", "description": "True if the log operation was successful."}, "description": "Uses YAHOO.widget.Logger to output a log message, if the widget is available.", "static": "", "guessedname": "log", "guessedtype": "function", "params": [{"type": "String", "name": "msg", "description": "  The message to log."}, {"type": "String", "name": "cat", "description": "  The log category for the message.  Default\ncategories are \"info\", \"warn\", \"error\", time\".\nCustom categories can be used as well. (opt)"}, {"type": "String", "name": "src", "description": "  The source of the the message (opt)"}]}, "extend": {"static": "", "params": [{"type": "Function", "name": "subc", "description": "   the object to modify"}, {"type": "Function", "name": "superc", "description": " the object to inherit"}, {"type": "String[]", "name": "overrides", "description": "  additional properties\/methods to add to the\nsubclass prototype.  These will override the\nmatching items obtained from the superclass \nif present."}], "description": "Utility to set up the prototype, constructor and superclass properties to\nsupport an inheritance strategy that can chain constructors and methods.", "guessedname": "extend", "guessedtype": "function"}}, "static": "", "file": "YAHOO.js", "guessedtype": "property", "shortname": "YAHOO", "description": "The YAHOO global namespace object"}}, "modules": {"yahoo": {"classlist": ["YAHOO"], "title": "YAHOO Global", "name": "yahoo", "filelist": ["YAHOO.js"], "description": "The YAHOO object is the single global object used by YUI Library.  It\ncontains utility function for setting up namespaces, inheritance, and\nlogging.  YAHOO.util, YAHOO.widget, and YAHOO.example are namespaces\ncreated automatically for and used by the library."}}, "filemap": {"YAHOO.js": {"classlist": ["YAHOO"], "name": "YAHOO.js", "module": "yahoo"}}}