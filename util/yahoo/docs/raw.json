{"classmap": {"YAHOO.lang": {"name": "YAHOO.lang", "namespace": "", "module": "yahoo", "guessedname": "lang", "methods": {"isArray": {"return": {"type": "", "description": "Boolean"}, "params": [{"type": "any", "name": "obj", "description": " The object being testing"}], "description": "Determines whether or not the provided object is an array", "guessedname": "isArray", "guessedtype": "function"}, "isString": {"return": {"type": "", "description": "Boolean"}, "params": [{"type": "any", "name": "obj", "description": " The object being testing"}], "description": "Determines whether or not the provided object is a string", "guessedname": "isString", "guessedtype": "function"}, "isBoolean": {"return": {"type": "", "description": "Boolean"}, "params": [{"type": "any", "name": "obj", "description": " The object being testing"}], "description": "Determines whether or not the provided object is a boolean", "guessedname": "isBoolean", "guessedtype": "function"}, "extend": {"static": "", "params": [{"type": "Function", "name": "subc", "description": "   the object to modify"}, {"type": "Function", "name": "superc", "description": " the object to inherit"}, {"type": "Object", "name": "overrides", "description": "  additional properties\/methods to add to the\nsubclass prototype.  These will override the\nmatching items obtained from the superclass \nif present."}], "description": "Utility to set up the prototype, constructor and superclass properties to\nsupport an inheritance strategy that can chain constructors and methods.", "guessedname": "extend", "guessedtype": "function"}, "isNull": {"return": {"type": "", "description": "Boolean"}, "params": [{"type": "any", "name": "obj", "description": " The object being testing"}], "description": "Determines whether or not the provided object is null", "guessedname": "isNull", "guessedtype": "function"}, "hasOwnProperty": {"return": {"type": "", "description": "Boolean"}, "params": [{"type": "any", "name": "obj", "description": " The object being testing"}], "description": "Determines whether or not the property was added\nto the object instance.  Returns false if the property is not present\nin the object, or was inherited from the prototype.\nThis abstraction is provided to enable hasOwnProperty for Safari 1.3.x.\nThere is a discrepancy between YAHOO.lang.hasOwnProperty and\nObject.prototype.hasOwnProperty when the property is a primitive added to\nboth the instance AND prototype with the same value:\n<pre>\nvar A = function() {};\nA.prototype.foo = 'foo';\nvar a = new A();\na.foo = 'foo';\nalert(a.hasOwnProperty('foo')); \/\/ true\nalert(YAHOO.lang.hasOwnProperty(a, 'foo')); \/\/ false when using fallback\n<\/pre>", "guessedname": "hasOwnProperty", "guessedtype": "function"}, "augment": {"static": "", "params": [{"type": "Function", "name": "r", "description": "  the object to receive the augmentation"}, {"type": "Function", "name": "s", "description": "  the object that supplies the properties to augment"}, {"type": "String*", "name": "arguments", "description": " zero or more properties methods to augment the\nreceiver with.  If none specified, everything\nin the supplier will be used unless it would\noverwrite an existing property in the receiver"}], "description": "Applies all prototype properties in the supplier to the receiver if the\nreceiver does not have these properties yet.  Optionally, one or more\nmethods\/properties can be specified (as additional parameters).  This\noption will overwrite the property if receiver has it already.", "guessedname": "augment", "guessedtype": "function"}, "isFunction": {"return": {"type": "", "description": "Boolean"}, "params": [{"type": "any", "name": "obj", "description": " The object being testing"}], "description": "Determines whether or not the provided object is a function", "guessedname": "isFunction", "guessedtype": "function"}, "isNumber": {"return": {"type": "", "description": "Boolean"}, "params": [{"type": "any", "name": "obj", "description": " The object being testing"}], "description": "Determines whether or not the provided object is a number", "guessedname": "isNumber", "guessedtype": "function"}, "isObject": {"return": {"type": "", "description": "Boolean"}, "params": [{"type": "any", "name": "obj", "description": " The object being testing"}], "description": "Determines whether or not the provided object is of type object\nor function", "guessedname": "isObject", "guessedtype": "function"}, "isUndefined": {"return": {"type": "", "description": "Boolean"}, "params": [{"type": "any", "name": "obj", "description": " The object being testing"}], "description": "Determines whether or not the provided object is undefined", "guessedname": "isUndefined", "guessedtype": "function"}}, "file": "YAHOO.js", "guessedtype": "property", "shortname": "YAHOO.lang", "description": "Provides the language utilites and extensions used by the library"}, "YAHOO_config": {"name": "YAHOO_config", "namespace": "", "module": "yahoo", "static": "", "file": "YAHOO.js", "shortname": "YAHOO_config", "properties": {"listener": {"static": "", "description": "A reference to a function that will be executed every time a YAHOO module\nis loaded.  As parameter, this function will receive the version\ninformation for the module. See <a href=\"YAHOO.env.html#getVersion\">\nYAHOO.env.getVersion<\/a> for the description of the version data structure.", "guessedname": "YAHOO", "guessedtype": "property"}}, "description": "YAHOO_config is not included part of the library.  Instead it is an object\nthat can be defined by the implementer immediately before including the\nYUI library.  The properties included in this object will be used to\nconfigure global properties needed as soon as the library begins to load."}, "YAHOO": {"name": "YAHOO", "namespace": "", "module": "yahoo", "guessedname": "YAHOO", "methods": {"log": {"return": {"type": "Boolean", "description": "True if the log operation was successful."}, "description": "Uses YAHOO.widget.Logger to output a log message, if the widget is\navailable.", "static": "", "guessedname": "log", "guessedtype": "function", "params": [{"type": "String", "name": "msg", "description": "  The message to log."}, {"type": "String", "name": "cat", "description": "  The log category for the message.  Default\ncategories are \"info\", \"warn\", \"error\", time\".\nCustom categories can be used as well. (opt)"}, {"type": "String", "name": "src", "description": "  The source of the the message (opt)"}]}, "extend": {"static": "", "params": [{"type": "Function", "name": "subc", "description": "   the object to modify"}, {"type": "Function", "name": "superc", "description": " the object to inherit"}, {"type": "Object", "name": "overrides", "description": "  additional properties\/methods to add to the\nsubclass prototype.  These will override the\nmatching items obtained from the superclass \nif present."}], "description": "An alias for <a href=\"YAHOO.lang.html#extend\">YAHOO.lang.extend<\/a>", "guessedname": "extend", "guessedtype": "property"}, "register": {"static": "", "params": [{"type": "String", "name": "name", "description": "    the name of the module (event, slider, etc)"}, {"type": "Function", "name": "mainClass", "description": " a reference to class in the module.  This\nclass will be tagged with the version info\nso that it will be possible to identify the\nversion that is in use when multiple versions\nhave loaded"}, {"type": "Object", "name": "data", "description": "      metadata object for the module.  Currently it\nis expected to contain a \"version\" property\nand a \"build\" property at minimum."}], "description": "Registers a module with the YAHOO object", "guessedname": "register", "guessedtype": "function"}, "namespace": {"return": {"type": "Object", "description": "A reference to the last namespace object created"}, "description": "Returns the namespace specified and creates it if it doesn't exist\n<pre>\nYAHOO.namespace(\"property.package\");\nYAHOO.namespace(\"YAHOO.property.package\");\n<\/pre>\nEither of the above would create YAHOO.property, then\nYAHOO.property.package\nBe careful when naming packages. Reserved words may work in some browsers\nand not others. For instance, the following will fail in Safari:\n<pre>\nYAHOO.namespace(\"really.long.nested.namespace\");\n<\/pre>\nThis fails because \"long\" is a future reserved word in ECMAScript", "static": "", "guessedname": "namespace", "guessedtype": "function", "params": [{"type": "String*", "name": "arguments", "description": " 1-n namespaces to create"}]}, "init": {"static": "", "description": "Initializes the global by creating the default namespaces and applying\nany new configuration information that is detected.", "guessedname": "init", "guessedtype": "function"}, "augment": {"static": "", "params": [{"type": "Function", "name": "r", "description": "  the object to receive the augmentation"}, {"type": "Function", "name": "s", "description": "  the object that supplies the properties to augment"}, {"type": "String*", "name": "arguments", "description": " zero or more properties methods to augment the\nreceiver with.  If none specified, everything\nin the supplier will be used unless it would\noverwrite an existing property in the receiver"}], "description": "An alias for <a href=\"YAHOO.lang.html#augment\">YAHOO.lang.augment<\/a>", "guessedname": "augment", "guessedtype": "property"}}, "static": "", "file": "YAHOO.js", "guessedtype": "property", "shortname": "YAHOO", "description": "The YAHOO global namespace object.  If YAHOO is already defined, the\nexisting YAHOO object will not be overwritten so that defined\nnamespaces are preserved."}, "YAHOO.env": {"name": "YAHOO.env", "namespace": "", "module": "yahoo", "guessedname": "env", "methods": {"getVersion": {"return": {"type": "Object", "description": "The version info"}, "description": "Returns the version data for the specified module:\n<dl>\n<dt>name:<\/dt>      <dd>The name of the module<\/dd>\n<dt>version:<\/dt>   <dd>The version in use<\/dd>\n<dt>build:<\/dt>     <dd>The build number in use<\/dd>\n<dt>versions:<\/dt>  <dd>All versions that were registered<\/dd>\n<dt>builds:<\/dt>    <dd>All builds that were registered.<\/dd>\n<dt>mainClass:<\/dt> <dd>An object that was was stamped with the\ncurrent version and build. If \nmainClass.VERSION != version or mainClass.BUILD != build,\nmultiple versions of pieces of the library have been\nloaded, potentially causing issues.<\/dd>\n<\/dl>", "static": "", "guessedname": "getVersion", "guessedtype": "function", "params": [{"type": "String", "name": "name", "description": " the name of the module (event, slider, etc)"}]}}, "static": "", "file": "YAHOO.js", "guessedtype": "property", "shortname": "YAHOO.env", "type": "Object", "properties": {"listeners": {"type": "Function[]", "description": "List of functions that should be executed every time a YUI module\nreports itself.", "guessedname": "listeners", "guessedtype": "property"}, "modules": {"type": "Object[]", "description": "Keeps the version info for all YUI modules that have reported themselves", "guessedname": "modules", "guessedtype": "property"}}, "description": "YAHOO.env is used to keep track of what is known about the YUI library and\nthe browsing environment"}}, "modules": {"yahoo": {"name": "yahoo", "title": "YAHOO Global", "classlist": ["YAHOO_config", "YAHOO", "YAHOO.env", "YAHOO.lang"], "filelist": ["YAHOO.js"], "optional": "event", "description": "The YAHOO object is the single global object used by YUI Library.  It\ncontains utility function for setting up namespaces, inheritance, and\nlogging.  YAHOO.util, YAHOO.widget, and YAHOO.example are namespaces\ncreated automatically for and used by the library."}}, "filemap": {"YAHOO.js": {"classlist": ["YAHOO_config", "YAHOO", "YAHOO.env", "YAHOO.lang"], "name": "YAHOO.js", "module": "yahoo"}}}