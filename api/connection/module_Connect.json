{"classmap": {"YAHOO.util.Connect": {"file": "connection.js", "namespace": "YAHOO.util", "module": "Connect", "methods": {"createFrame": {"return": {"type": "void", "description": ""}, "description": "Creates an iframe to be used for form file uploads.  It is remove from the\ndocument upon completion of the upload transaction.", "private": "", "static": "", "guessedname": "createFrame", "guessedtype": "function", "params": [{"type": "string", "name": "optional", "description": " qualified path of iframe resource for SSL in IE."}]}, "handleReadyState": {"return": {"type": "void", "description": ""}, "description": "This method serves as a timer that polls the XHR object's readyState\nproperty during a transaction, instead of binding a callback to the\nonreadystatechange event.  Upon readyState 4, handleTransactionResponse\nwill process the response, and the timer will be cleared.", "private": "", "static": "", "guessedname": "handleReadyState", "guessedtype": "function", "params": [{"type": "object", "name": "o", "description": " The connection object"}, {"type": "callback", "name": "callback", "description": " The user-defined callback object"}]}, "asyncRequest": {"return": {"type": "object", "description": "Returns the connection object"}, "description": "Method for initiating an asynchronous request via the XHR object.", "static": "", "guessedname": "asyncRequest", "guessedtype": "function", "params": [{"type": "string", "name": "method", "description": " HTTP transaction method"}, {"type": "string", "name": "uri", "description": " Fully qualified path of resource"}, {"type": "callback", "name": "callback", "description": " User-defined callback function or object"}, {"type": "string", "name": "postData", "description": " HTTP POST data"}], "public": ""}, "setForm": {"return": {"type": "string", "description": "Returns the encoded, label-value string."}, "description": "This method assembles the form label and value pairs and\nconstructs an encoded string.\nasyncRequest() will automatically initialize the\ntransaction with a HTTP header Content-Type of\napplication\/x-www-form-urlencoded.", "static": "", "guessedname": "setForm", "guessedtype": "function", "params": [{"type": "string || object", "name": "form", "description": " id or name attribute, or form object."}, {"type": "string", "name": "optional", "description": " boolean to indicate SSL environment."}, {"type": "string || boolean", "name": "optional", "description": " qualified path of iframe resource for SSL in IE."}], "public": ""}, "setDefaultPostHeader": {"return": {"type": "", "description": "void"}, "description": "Member to enable or disable the default POST header.", "static": "", "guessedname": "setDefaultPostHeader", "guessedtype": "function", "params": [{"type": "boolean", "name": "b", "description": " Set and use default header - true or false ."}], "public": ""}, "uploadFile": {"return": {"type": "void", "description": ""}, "description": "Uploads HTML form, including files\/attachments, to the\niframe created in createFrame.", "private": "", "static": "", "guessedname": "uploadFile", "guessedtype": "function", "params": [{"type": "int", "name": "id", "description": " The transaction id."}, {"type": "object", "name": "callback", "description": " - User-defined callback object."}, {"type": "string", "name": "uri", "description": " Fully qualified path of resource."}]}, "isCallInProgress": {"return": {"type": "boolean", "description": "Returns true if transaction is still in progress\nor false if the transaction has completed."}, "description": "Public method to check if the transaction is still being processed.", "static": "", "guessedname": "isCallInProgress", "guessedtype": "function", "params": [{"type": "object", "name": "o", "description": " The connection object returned by asyncRequest"}], "public": ""}, "setPollingInterval": {"return": {"type": "void", "description": "void"}, "description": "Member to modify the default polling interval.", "static": "", "guessedname": "setPollingInterval", "guessedtype": "function", "params": [{"type": "int", "name": "i", "description": " The polling interval in milliseconds."}], "public": ""}, "getConnectionObject": {"return": {"type": "object", "description": ""}, "description": "This method is called by asyncRequest to create a\nvalid connection object for the transaction.  It also passes a\ntransaction id and increments the transaction id counter.", "private": "", "static": "", "guessedname": "getConnectionObject", "guessedtype": "function"}, "createExceptionObject": {"return": {"type": "object", "description": ""}, "description": "If a transaction cannot be completed due to dropped or closed connections,\nthere may be not be enough information to build a full response object.\nThe failure callback will be fired and this specific condition can be identified\nby a status property value of 0.\nIf an abort was successful, the status property will report a value of -1.", "private": "", "static": "", "guessedname": "createExceptionObject", "guessedtype": "function", "params": [{"type": "int", "name": "tId", "description": " The Transaction Id"}, {"type": "callbackArg", "name": "callbackArg", "description": " The user-defined argument or arguments to be passed to the callback"}, {"type": "boolean", "name": "isAbort", "description": " Determines if the exception case is caused by a transaction abort"}]}, "createResponseObject": {"return": {"type": "object", "description": ""}, "description": "This method evaluates the server response, creates and returns the results via\nits properties.  Success and failure cases will differ in the response\nobject's property values.", "private": "", "static": "", "guessedname": "createResponseObject", "guessedtype": "function", "params": [{"type": "object", "name": "o", "description": " The connection object"}, {"type": "callbackArg", "name": "callbackArg", "description": " The user-defined argument or arguments to be passed to the callback"}]}, "appendPostField": {"return": {"type": "void", "description": ""}, "description": "Parses the POST data and creates hidden form elements\nfor each key-value, and appends them to the HTML form object.", "private": "", "static": "", "guessedname": "appendPostField", "guessedtype": "function", "params": [{"type": "string", "name": "postData", "description": " The HTTP POST data"}]}, "initHeader": {"return": {"type": "void", "description": ""}, "description": "Public method that stores the custom HTTP headers for each transaction.", "static": "", "guessedname": "initHeader", "guessedtype": "function", "params": [{"type": "string", "name": "label", "description": " The HTTP header label"}, {"type": "string", "name": "value", "description": " The HTTP header value"}], "public": ""}, "setHeader": {"return": {"type": "void", "description": ""}, "description": "Accessor that sets the HTTP headers for each transaction.", "private": "", "static": "", "guessedname": "setHeader", "guessedtype": "function", "params": [{"type": "object", "name": "o", "description": " The connection object for the transaction."}]}, "setProgId": {"return": {"type": "void", "description": "void"}, "description": "Member to add an ActiveX id to the existing xml_progid array.\nIn the event(unlikely) a new ActiveX id is introduced, it can be added\nwithout internal code modifications.", "static": "", "guessedname": "setProgId", "guessedtype": "function", "params": [{"type": "string", "name": "id", "description": " The ActiveX id to be added to initialize the XHR object."}], "public": ""}, "releaseObject": {"return": {"type": "void", "description": ""}, "description": "Dereference the XHR instance and the connection object after the transaction is completed.", "private": "", "static": "", "guessedname": "releaseObject", "guessedtype": "function", "params": [{"type": "object", "name": "o", "description": " The connection object"}]}, "createXhrObject": {"return": {"type": "", "description": "object"}, "description": "Instantiates a XMLHttpRequest object and returns an object with two properties:\nthe XMLHttpRequest instance and the transaction id.", "private": "", "static": "", "guessedname": "createXhrObject", "guessedtype": "function", "params": [{"type": "int", "name": "transactionId", "description": " Property containing the transaction id for this transaction."}]}, "abort": {"return": {"type": "boolean", "description": ""}, "description": "Method to terminate a transaction, if it has not reached readyState 4.", "static": "", "guessedname": "abort", "guessedtype": "function", "params": [{"type": "object", "name": "o", "description": " The connection object returned by asyncRequest."}, {"type": "object", "name": "callback", "description": "  User-defined callback object."}, {"type": "string", "name": "isTimeout", "description": " boolean to indicate if abort was a timeout."}], "public": ""}, "handleTransactionResponse": {"return": {"type": "void", "description": ""}, "description": "This method attempts to interpret the server response and\ndetermine whether the transaction was successful, or if an error or\nexception was encountered.", "private": "", "static": "", "guessedname": "handleTransactionResponse", "guessedtype": "function", "params": [{"type": "object", "name": "o", "description": " The connection object"}, {"type": "object", "name": "callback", "description": " The sser-defined callback object"}, {"type": "boolean", "name": "isAbort", "description": " Determines if the transaction was aborted."}]}}, "guessedname": "Connect", "guessedtype": "property", "shortname": "Connect", "properties": {"_http_header": {"description": "Object literal of HTTP header(s)", "private": "", "static": "", "guessedname": "_http_header", "guessedtype": "property", "type": "object"}, "_transaction_id": {"description": "A transaction counter that increments the transaction id for each transaction.", "private": "", "static": "", "guessedname": "_transaction_id", "guessedtype": "property", "type": "int"}, "_sFormData": {"description": "Property modified by setForm() to set the HTML form data\nfor each transaction.", "private": "", "static": "", "guessedname": "_sFormData", "guessedtype": "property", "type": "string"}, "_use_default_post_header": {"description": "Determines if a default header of\nContent-Type of 'application\/x-www-form-urlencoded'\nwill be added to any client HTTP headers sent for POST\ntransactions.", "private": "", "static": "", "guessedname": "_use_default_post_header", "guessedtype": "property", "type": "boolean"}, "_isFileUpload": {"description": "Property modified by setForm() to determine if a file(s)\nupload is expected.", "private": "", "static": "", "guessedname": "_isFileUpload", "guessedtype": "property", "type": "boolean"}, "_isFormSubmit": {"description": "Property modified by setForm() to determine if the data\nshould be submitted as an HTML form.", "private": "", "static": "", "guessedname": "_isFormSubmit", "guessedtype": "property", "type": "boolean"}, "_poll": {"description": "Collection of polling references to the polling mechanism in handleReadyState.", "private": "", "static": "", "guessedname": "_poll", "guessedtype": "property", "type": "object"}, "_default_post_header": {"description": "Determines if a default header of\nContent-Type of 'application\/x-www-form-urlencoded'\nwill be added to any client HTTP headers sent for POST\ntransactions.", "private": "", "static": "", "guessedname": "_default_post_header", "guessedtype": "property", "type": "boolean"}, "_timeOut": {"description": "Queue of timeout values for each transaction callback with a defined timeout value.", "private": "", "static": "", "guessedname": "_timeOut", "guessedtype": "property", "type": "object"}, "_polling_interval": {"description": "The polling frequency, in milliseconds, for HandleReadyState.\nwhen attempting to determine a transaction's XHR readyState.\nThe default is 50 milliseconds.", "private": "", "static": "", "guessedname": "_polling_interval", "guessedtype": "property", "type": "int"}, "_formNode": {"description": "Property modified by setForm() to set a reference to the HTML\nform node if the desired action is file upload.", "private": "", "static": "", "guessedname": "_formNode", "guessedtype": "property", "type": "object"}, "_has_http_headers": {"description": "Determines if HTTP headers are set.", "private": "", "static": "", "guessedname": "_has_http_headers", "guessedtype": "property", "type": "boolean"}, "_msxml_progid": {"description": "Array of MSFT ActiveX ids for XMLHttpRequest.", "private": "", "static": "", "guessedname": "_msxml_progid", "guessedtype": "property", "type": "array"}}, "name": "YAHOO.util.Connect"}}, "modules": {"Connect": {"classlist": ["YAHOO.util.Connect"], "name": "Connect", "description": "The Connection Manager provides a simplified interface to the XMLHttpRequest\nobject.  It handles cross-browser instantiantion of XMLHttpRequest, negotiates the\ninteractive states and server response, returning the results to a pre-defined\ncallback you create."}}, "namespaces": ["YAHOO.util"], "filemap": {"connection.js": {"classlist": ["YAHOO.util.Connect"], "name": "connection.js"}}}