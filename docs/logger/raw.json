{"classmap": {"YAHOO.widget.LogReader": {"name": "YAHOO.widget.LogReader", "constructors": [{"params": [{"type": "HTMLElement | String", "name": "elContainer", "description": "  DOM element reference or ID string to contain UI."}, {"type": "Object", "name": "oConfigs", "description": "  Optional object literal of configuration params."}], "description": "The LogReader class provides UI to read messages logged to YAHOO.widget.Logger."}], "namespace": "YAHOO.widget", "module": "logger", "guessedname": "LogReader", "methods": {"getLastTime": {"return": {"type": "Date", "description": "Timestamp of the last log."}, "description": "Gets timestamp of the last log.", "guessedname": "getLastTime", "guessedtype": "function"}, "_onReset": {"guessedname": "_onReset", "params": [{"type": "String", "name": "sType", "description": "  The event."}, {"type": "Array", "name": "aArgs", "description": "  Data passed from event firer."}, {"type": "Object", "name": "oSelf", "description": "  The LogReader instance."}], "description": "Handles Logger's resetEvent.", "private": "", "guessedtype": "function"}, "show": {"description": "Shows UI of log reader. Logging functionality is not disrupted.", "guessedname": "show", "guessedtype": "function"}, "setTitle": {"params": [{"type": "String", "name": "sTitle", "description": "  New title."}], "description": "Updates title to given string.", "guessedname": "setTitle", "guessedtype": "function"}, "_clearConsole": {"private": "", "description": "Clears all outputted log messages from the console and resets the time of the\r\nlast output log message.", "guessedname": "_clearConsole", "guessedtype": "function"}, "_createSourceCheckbox": {"guessedname": "_createSourceCheckbox", "params": [{"type": "String", "name": "sSource", "description": "  Source name."}], "description": "Creates a checkbox in the log reader footer element to filter by source.", "private": "", "guessedtype": "function"}, "_onClickPauseBtn": {"guessedname": "_onClickPauseBtn", "params": [{"type": "HTMLEvent", "name": "v", "description": "  The click event."}, {"type": "Object", "name": "oSelf", "description": "  The LogReader instance."}], "description": "Handles click events on the pause button.", "private": "", "guessedtype": "function"}, "pause": {"description": "Pauses output of log messages. While paused, log messages are not lost, but\r\nget saved to a buffer and then output upon resume of log reader.", "guessedname": "pause", "guessedtype": "function"}, "hide": {"description": "Hides UI of log reader. Logging functionality is not disrupted.", "guessedname": "hide", "guessedtype": "function"}, "_printToConsole": {"guessedname": "_printToConsole", "params": [{"type": "Array", "name": "aEntries", "description": "  Array of entry objects to output to console."}], "description": "Cycles through an array of log messages, and outputs each one to the console\r\nif its category has not been filtered out.", "private": "", "guessedtype": "function"}, "_printBuffer": {"private": "", "description": "Sends buffer of log messages to output and clears buffer.", "guessedname": "_printBuffer", "guessedtype": "function"}, "toString": {"return": {"type": "String", "description": "Unique name of the LogReader instance."}, "description": "Public accessor to the unique name of the LogReader instance.", "guessedname": "toString", "guessedtype": "function"}, "_onClickCollapseBtn": {"guessedname": "_onClickCollapseBtn", "params": [{"type": "HTMLEvent", "name": "v", "description": "  The click event."}, {"type": "Object", "name": "oSelf", "description": "  The LogReader instance"}], "description": "Handles click events on the collapse button.", "private": "", "guessedtype": "function"}, "_onCategoryCreate": {"guessedname": "_onCategoryCreate", "params": [{"type": "String", "name": "sType", "description": "  The event."}, {"type": "Array", "name": "aArgs", "description": "  Data passed from event firer."}, {"type": "Object", "name": "oSelf", "description": "  The LogReader instance."}], "description": "Handles Logger's categoryCreateEvent.", "private": "", "guessedtype": "function"}, "_onClickClearBtn": {"guessedname": "_onClickClearBtn", "params": [{"type": "HTMLEvent", "name": "v", "description": "  The click event."}, {"type": "Object", "name": "oSelf", "description": "  The LogReader instance."}], "description": "Handles click events on the clear button.", "private": "", "guessedtype": "function"}, "resume": {"description": "Resumes output of log messages, including outputting any log messages that\r\nhave been saved to buffer while paused.", "guessedname": "resume", "guessedtype": "function"}, "_onSourceCreate": {"guessedname": "_onSourceCreate", "params": [{"type": "String", "name": "sType", "description": "  The event."}, {"type": "Array", "name": "aArgs", "description": "  Data passed from event firer."}, {"type": "Object", "name": "oSelf", "description": "  The LogReader instance."}], "description": "Handles Logger's sourceCreateEvent.", "private": "", "guessedtype": "function"}, "_onNewLog": {"guessedname": "_onNewLog", "params": [{"type": "String", "name": "sType", "description": "  The event."}, {"type": "Array", "name": "aArgs", "description": "  Data passed from event firer."}, {"type": "Object", "name": "oSelf", "description": "  The LogReader instance."}], "description": "Handles Logger's newLogEvent.", "private": "", "guessedtype": "function"}, "html2Text": {"guessedname": "html2Text", "params": [{"type": "String", "name": "sHtml", "description": "  String to convert."}], "description": "TODO: Include in util package.\r\nConverts input chars \"<\", \">\", and \"&\" to HTML entities.", "private": "", "guessedtype": "function"}, "_filterLogs": {"private": "", "description": "Reprints all log messages in the stack through filters.", "guessedname": "_filterLogs", "guessedtype": "function"}, "_onCheckCategory": {"guessedname": "_onCheckCategory", "params": [{"type": "HTMLEvent", "name": "v", "description": "  The click event."}, {"type": "Object", "name": "oSelf", "description": "  The LogReader instance."}], "description": "Handles check events on the category filter checkboxes.", "private": "", "guessedtype": "function"}, "_onCheckSource": {"guessedname": "_onCheckSource", "params": [{"type": "HTMLEvent", "name": "v", "description": "  The click event."}, {"type": "Object", "name": "oSelf", "description": "  The log reader instance."}], "description": "Handles check events on the category filter checkboxes.", "private": "", "guessedtype": "function"}, "formatMsg": {"return": {"type": "String", "description": "HTML-formatted message for output to console."}, "params": [{"type": "Object", "name": "oLogMsg", "description": "  Log message object."}], "description": "Formats message string to HTML for output to console.", "guessedname": "formatMsg", "guessedtype": "function"}, "_createCategoryCheckbox": {"guessedname": "_createCategoryCheckbox", "params": [{"type": "String", "name": "sCategory", "description": "  Category name."}], "description": "Creates the UI for a category filter in the log reader footer element.", "private": "", "guessedtype": "function"}}, "file": "LogReader.js", "guessedtype": "function", "shortname": "LogReader", "properties": {"right": {"type": "String", "description": "Public member to access CSS right position of the log reader container.", "guessedname": "right", "guessedtype": "property"}, "height": {"type": "String", "description": "Public member to access CSS height of the log reader container.", "guessedname": "height", "guessedtype": "property"}, "newestOnTop": {"type": "Boolean", "description": "Whether or not newest message is printed on top.", "guessedname": "newestOnTop", "guessedtype": "property"}, "_elCollapse": {"guessedname": "_elCollapse", "type": "HTMLElement", "description": "Log reader collapse element.", "private": "", "guessedtype": "property"}, "_elCategoryFilters": {"guessedname": "_elCategoryFilters", "type": "HTMLElement", "description": "Container element for log reader category filter checkboxes.", "private": "", "guessedtype": "property"}, "_memberName": {"description": "Internal class member to index multiple log reader instances.", "default": "0", "private": "", "static": "", "guessedname": "_index", "guessedtype": "property", "type": "Number"}, "_sName": {"guessedname": "_sName", "type": "String", "description": "Name of LogReader instance.", "private": "", "guessedtype": "property"}, "logReaderEnabled": {"default": "true", "type": "Boolean", "description": "Whether or not the log reader is enabled to output log messages.", "guessedname": "logReaderEnabled", "guessedtype": "property"}, "thresholdMax": {"default": "500", "type": "Number", "description": "Maximum number of messages a LogReader console will display.", "guessedname": "thresholdMax", "guessedtype": "property"}, "_buffer": {"guessedname": "_buffer", "type": "Array", "description": "Buffer of log messages for batch output.", "private": "", "guessedtype": "property"}, "bottom": {"type": "String", "description": "Public member to access CSS bottom position of the log reader container.", "guessedname": "bottom", "guessedtype": "property"}, "_elBtns": {"guessedname": "_elBtns", "type": "HTMLElement", "description": "Log reader buttons container element.", "private": "", "guessedtype": "property"}, "_btnClear": {"guessedname": "_btnClear", "type": "HTMLElement", "description": "Clear button element.", "private": "", "guessedtype": "property"}, "top": {"type": "String", "description": "Public member to access CSS top position of the log reader container.", "guessedname": "top", "guessedtype": "property"}, "_btnPause": {"guessedname": "_btnPause", "type": "HTMLElement", "description": "Log reader pause button element.", "private": "", "guessedtype": "property"}, "_elContainer": {"guessedname": "_elContainer", "type": "HTMLElement", "description": "Log reader container element.", "private": "", "guessedtype": "property"}, "_lastTime": {"guessedname": "_lastTime", "type": "Date", "description": "Date of last output log message.", "private": "", "guessedtype": "property"}, "fontSize": {"type": "String", "description": "Public member to access CSS font size of the log reader container.", "guessedname": "fontSize", "guessedtype": "property"}, "footerEnabled": {"default": "true", "type": "Boolean", "description": "Whether or not the footer UI is enabled for the log reader.", "guessedname": "footerEnabled", "guessedtype": "property"}, "verboseOutput": {"default": "true", "type": "Boolean", "description": "Whether or not output is verbose (more readable). Setting to true will make\r\noutput more compact (less readable).", "guessedname": "verboseOutput", "guessedtype": "property"}, "_sourceFilters": {"guessedname": "_sourceFilters", "type": "Array", "description": "Array of filters for log message sources.", "private": "", "guessedtype": "property"}, "_categoryFilters": {"guessedname": "_categoryFilters", "type": "Array", "description": "Array of filters for log message categories.", "private": "", "guessedtype": "property"}, "_consoleMsgCount": {"description": "Number of log messages output to console.", "default": "0", "private": "", "guessedname": "_consoleMsgCount", "guessedtype": "property", "type": "Number"}, "_elSourceFilters": {"guessedname": "_elSourceFilters", "type": "HTMLElement", "description": "Container element for log reader source filter checkboxes.", "private": "", "guessedtype": "property"}, "thresholdMin": {"default": "100", "type": "Number", "description": "When a LogReader console reaches its thresholdMax, it will clear out messages\r\nand print out the latest thresholdMin number of messages.", "guessedname": "thresholdMin", "guessedtype": "property"}, "_title": {"guessedname": "_title", "type": "HTMLElement", "description": "Log reader title header element.", "private": "", "guessedtype": "property"}, "_elDefaultContainer": {"guessedname": "_elDefaultContainer", "type": "HTMLElement", "description": "A class member shared by all log readers if a container needs to be\r\ncreated during instantiation. Will be null if a container element never needs to\r\nbe created on the fly, such as when the implementer passes in their own element.", "private": "", "guessedtype": "property"}, "_elFt": {"guessedname": "_elFt", "type": "HTMLElement", "description": "Log reader footer element.", "private": "", "guessedtype": "property"}, "_elHd": {"guessedname": "_elHd", "type": "HTMLElement", "description": "Log reader header element.", "private": "", "guessedtype": "property"}, "_elConsole": {"guessedname": "_elConsole", "type": "HTMLElement", "description": "Log reader console element.", "private": "", "guessedtype": "property"}, "_btnCollapse": {"guessedname": "_btnCollapse", "type": "HTMLElement", "description": "Log reader collapse button element.", "private": "", "guessedtype": "property"}, "_timeout": {"guessedname": "_timeout", "type": "Number", "description": "Batched output timeout ID.", "private": "", "guessedtype": "property"}, "width": {"type": "String", "description": "Public member to access CSS width of the log reader container.", "guessedname": "width", "guessedtype": "property"}, "left": {"type": "String", "description": "Public member to access CSS left position of the log reader container.", "guessedname": "left", "guessedtype": "property"}}, "description": "The LogReader class provides UI to read messages logged to YAHOO.widget.Logger."}, "YAHOO.widget.LogWriter": {"name": "YAHOO.widget.LogWriter", "constructors": [{"params": [{"type": "String", "name": "sSource", "description": "  Source of LogWriter instance."}], "description": "The LogWriter class provides a mechanism to log messages through\r\nYAHOO.widget.Logger from a named source."}], "namespace": "YAHOO.widget", "module": "logger", "guessedname": "LogWriter", "methods": {"getSource": {"return": {"type": "String", "description": "The LogWriter source."}, "description": "Public accessor to get the source name.", "guessedname": "getSource", "guessedtype": "function"}, "toString": {"return": {"type": "String", "description": "Unique name of the LogWriter instance."}, "description": "Public accessor to the unique name of the LogWriter instance.", "guessedname": "toString", "guessedtype": "function"}, "log": {"params": [{"type": "String", "name": "sMsg", "description": "  The log message."}, {"type": "String", "name": "sCategory", "description": "  Category name."}], "description": "Logs a message attached to the source of the LogWriter.", "guessedname": "log", "guessedtype": "function"}, "setSource": {"params": [{"type": "String", "name": "sSource", "description": "  Source of LogWriter instance."}], "description": "Public accessor to set the source name.", "guessedname": "setSource", "guessedtype": "function"}}, "file": "LogWriter.js", "guessedtype": "function", "shortname": "LogWriter", "properties": {"_source": {"guessedname": "_source", "type": "String", "description": "Source of the LogWriter instance.", "private": "", "guessedtype": "property"}}, "description": "The LogWriter class provides a mechanism to log messages through\r\nYAHOO.widget.Logger from a named source."}, "YAHOO.widget.LogMsg": {"name": "YAHOO.widget.LogMsg", "constructors": [{"params": [{"type": "Object", "name": "oConfigs", "description": "  Object literal of configuration params."}], "description": "The LogMsg class defines a single log message."}], "namespace": "YAHOO.widget", "module": "logger", "guessedname": "LogMsg", "file": "LogMsg.js", "guessedtype": "function", "shortname": "LogMsg", "properties": {"msg": {"type": "String", "description": "Log message.", "guessedname": "msg", "guessedtype": "property"}, "category": {"type": "String", "description": "Log category.", "guessedname": "category", "guessedtype": "property"}, "sourceDetail": {"type": "String", "description": "Log source detail. The remainder of the string passed in as the source argument, not\r\nincluding the first word (if any).", "guessedname": "sourceDetail", "guessedtype": "property"}, "source": {"type": "String", "description": "Log source. The first word passed in as the source argument.", "guessedname": "source", "guessedtype": "property"}, "time": {"type": "Date", "description": "Log timestamp.", "guessedname": "time", "guessedtype": "property"}}, "description": "The LogMsg class defines a single log message."}, "YAHOO.widget.Logger": {"name": "YAHOO.widget.Logger", "namespace": "YAHOO.widget", "module": "logger", "guessedname": "Logger", "methods": {"reset": {"description": "Resets internal stack and startTime, enables Logger, and fires logResetEvent.", "guessedname": "reset", "guessedtype": "function"}, "_isNewSource": {"return": {"type": "Boolean", "description": "Returns true if source is unknown, else returns false."}, "description": "Checks to see if a source already exists.", "private": "", "params": [{"type": "String", "name": "sSource", "description": "  Source name."}], "guessedname": "_isNewSource", "guessedtype": "function"}, "getStack": {"return": {"type": "Array", "description": "Array of log messages."}, "description": "Public accessor to internal stack of log messages.", "guessedname": "getStack", "guessedtype": "function"}, "log": {"params": [{"type": "String", "name": "sMsg", "description": "  The log message."}, {"type": "String", "name": "sCategory", "description": "  Category of log message, or null."}, {"type": "String", "name": "sSource", "description": "  Source of LogWriter, or null if global."}], "description": "Saves a log message to the stack and fires newLogEvent. If the log message is\r\nassigned to an unknown category, creates a new category. If the log message is\r\nfrom an unknown source, creates a new source.  If browser console is enabled,\r\noutputs the log message to browser console.", "guessedname": "log", "guessedtype": "function"}, "_onWindowError": {"guessedname": "_onWindowError", "params": [{"type": "String", "name": "sMsg", "description": "  The error message."}, {"type": "String", "name": "sUrl", "description": "  URL of the error."}, {"type": "String", "name": "sLine", "description": "  Line number of the error."}], "description": "Handles logging of messages due to window error events.", "private": "", "guessedtype": "function"}, "_isNewCategory": {"return": {"type": "Boolean", "description": "Returns true if category is unknown, else returns false."}, "description": "Checks to see if a category has already been created.", "private": "", "params": [{"type": "String", "name": "sCategory", "description": "  Category name."}], "guessedname": "_isNewCategory", "guessedtype": "function"}, "_createNewCategory": {"guessedname": "_createNewCategory", "params": [{"type": "String", "name": "sCategory", "description": "  Category name."}], "description": "Creates a new category of log messages and fires categoryCreateEvent.", "private": "", "guessedtype": "function"}, "_printToBrowserConsole": {"guessedname": "_printToBrowserConsole", "params": [{"type": "Object", "name": "oEntry", "description": "  Log entry object."}], "description": "Outputs a log message to global console.log() function.", "private": "", "guessedtype": "function"}, "_createNewSource": {"guessedname": "_createNewSource", "params": [{"type": "String", "name": "sSource", "description": "  Source name."}], "description": "Creates a new source of log messages and fires sourceCreateEvent.", "private": "", "guessedtype": "function"}, "enableBrowserConsole": {"description": "Enables output to the browser's global console.log() function, which is used\r\nby the Firebug extension to Firefox as well as Safari.", "guessedname": "enableBrowserConsole", "guessedtype": "function"}, "disableBrowserConsole": {"description": "Disables output to the browser's global console.log() function, which is used\r\nby the Firebug extension to Firefox as well as Safari.", "guessedname": "disableBrowserConsole", "guessedtype": "function"}, "getStartTime": {"return": {"type": "Date", "description": "Internal date of when Logger singleton was initialized."}, "description": "Public accessor to internal start time.", "guessedname": "getStartTime", "guessedtype": "function"}}, "static": "", "file": "Logger.js", "guessedtype": "property", "shortname": "Logger", "events": {"logResetEvent": {"description": "Fired when the Logger has been reset has been created.", "guessedname": "logResetEvent", "guessedtype": "property"}, "newLogEvent": {"params": [{"type": "String", "name": "sMsg", "description": "  Log message."}], "description": "Fired when a new log message has been created.", "guessedname": "newLogEvent", "guessedtype": "property"}, "sourceCreateEvent": {"params": [{"type": "String", "name": "sSource", "description": "  Source name."}], "description": "Fired when a new source has been named.", "guessedname": "sourceCreateEvent", "guessedtype": "property"}, "categoryCreateEvent": {"params": [{"type": "String", "name": "sCategory", "description": "  Category name."}], "description": "Fired when a new category has been created.", "guessedname": "categoryCreateEvent", "guessedtype": "property"}}, "description": "The singleton Logger class provides core log management functionality. Saves\r\nlogs written through the global YAHOO.log function or written by a LogWriter\r\ninstance. Provides access to logs for reading by a LogReader instance or\r\nnative browser console such as the Firebug extension to Firefox or Safari's\r\nJavaScript console through integration with the console.log() method."}}, "modules": {"logger": {"name": "logger", "title": "Logger Widget", "classlist": ["YAHOO.widget.Logger", "YAHOO.widget.LogMsg", "YAHOO.widget.LogReader", "YAHOO.widget.LogWriter"], "filelist": ["Logger.js", "LogMsg.js", "LogReader.js", "LogWriter.js"], "optional": "dragdrop", "requires": "yahoo, event, dom", "description": "The Logger widget provides a simple way to read or write log messages in\r\nJavaScript code. Integration with the YUI Library's debug builds allow\r\nimplementers to access under-the-hood events, errors, and debugging messages.\r\nOutput may be read through a LogReader console and\/or output to a browser\r\nconsole."}}, "namespaces": ["YAHOO.widget"], "filemap": {"LogMsg.js": {"classlist": ["YAHOO.widget.LogMsg"], "name": "LogMsg.js", "module": "logger"}, "LogWriter.js": {"classlist": ["YAHOO.widget.LogWriter"], "name": "LogWriter.js", "module": "logger"}, "LogReader.js": {"classlist": ["YAHOO.widget.LogReader"], "name": "LogReader.js", "module": "logger"}, "Logger.js": {"classlist": ["YAHOO.widget.Logger"], "name": "Logger.js", "module": "logger"}}}