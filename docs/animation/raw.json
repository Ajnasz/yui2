{"classmap": {"YAHOO.util.Scroll": {"name": "YAHOO.util.Scroll", "constructors": [{"params": [{"type": "String or HTMLElement", "name": "el", "description": " Reference to the element that will be animated"}, {"type": "Object", "name": "attributes", "description": " The attribute(s) to be animated.  \nEach attribute is an object with at minimum a \"to\" or \"by\" member defined.  \nAdditional optional members are \"from\" (defaults to current value), \"units\" (defaults to \"px\").  \nAll attribute names use camelCase."}, {"type": "Number", "name": "duration", "description": " (optional, defaults to 1 second) Length of animation (frames or seconds), defaults to time-based"}, {"type": "Function", "name": "method", "description": " (optional, defaults to YAHOO.util.Easing.easeNone) Computes the values that are applied to the attributes per frame (generally a YAHOO.util.Easing method)"}], "description": "Anim subclass for scrolling elements to a position defined by the \"scroll\"\nmember of \"attributes\".  All \"scroll\" members are arrays with x, y scroll positions.\n<p>Usage: <code>var myAnim = new YAHOO.util.Scroll(el, { scroll: { to: [0, 800] } }, 1, YAHOO.util.Easing.easeOut);<\/code><\/p>"}], "namespace": "YAHOO.util", "module": "animation", "extends": "YAHOO.util.Anim", "superclass": "YAHOO.util.Anim", "file": "Scroll.js", "shortname": "Scroll", "requires": "YAHOO.util.Anim", "description": "Anim subclass for scrolling elements to a position defined by the \"scroll\"\nmember of \"attributes\".  All \"scroll\" members are arrays with x, y scroll positions.\n<p>Usage: <code>var myAnim = new YAHOO.util.Scroll(el, { scroll: { to: [0, 800] } }, 1, YAHOO.util.Easing.easeOut);<\/code><\/p>"}, "YAHOO.util.Bezier": {"name": "YAHOO.util.Bezier", "namespace": "YAHOO.util", "module": "animation", "guessedname": "Bezier", "methods": {"getPosition": {"return": {"type": "Array", "description": "An array containing int x and y member data"}, "params": [{"type": "Array", "name": "points", "description": " An array containing Bezier points"}, {"type": "Number", "name": "t", "description": " A number between 0 and 1 which is the basis for determining current position"}], "description": "Get the current position of the animated element based on t.\nEach point is an array of \"x\" and \"y\" values (0 = x, 1 = y)\nAt least 2 points are required (start and end).\nFirst point is start. Last point is end.\nAdditional control points are optional.", "guessedname": "getPosition", "guessedtype": "function"}}, "file": "Bezier.js", "guessedtype": "function", "shortname": "Bezier", "description": "Used to calculate Bezier splines for any number of control points."}, "YAHOO.util.AnimMgr": {"name": "YAHOO.util.AnimMgr", "namespace": "YAHOO.util", "module": "animation", "guessedname": "AnimMgr", "methods": {"run": {"description": "Called per Interval to handle each animation frame.", "guessedname": "run", "guessedtype": "function"}, "unRegister": {"guessedname": "unRegister", "params": [{"type": "object", "name": "tween", "description": " The Anim instance to be be registered"}, {"type": "Int", "name": "index", "description": " The index of the Anim instance"}], "description": "removes an animation instance from the animation queue.\nAll animation instances must be registered in order to animate.", "private": "", "guessedtype": "function"}, "stop": {"params": [{"type": "object", "name": "tween", "description": " A specific Anim instance to stop (optional)\nIf no instance given, Manager stops thread and all animations."}], "description": "Stops the animation thread or a specific animation instance.", "guessedname": "stop", "guessedtype": "function"}, "start": {"description": "Starts the animation thread.\nOnly one thread can run at a time.", "guessedname": "start", "guessedtype": "function"}, "registerElement": {"params": [{"type": "object", "name": "tween", "description": " The Anim instance to be be registered"}], "description": "Adds an animation instance to the animation queue.\nAll animation instances must be registered in order to animate.", "guessedname": "registerElement", "guessedtype": "function"}, "correctFrame": {"guessedname": "correctFrame", "params": [{"type": "Object", "name": "tween", "description": " The Anim instance being corrected."}], "description": "On the fly frame correction to keep animation on time.", "private": "", "guessedtype": "function"}}, "file": "AnimMgr.js", "guessedtype": "function", "shortname": "AnimMgr", "properties": {"queue": {"guessedname": "queue", "type": "Array", "description": "The current queue of registered animation objects.", "private": "", "guessedtype": "property"}, "tweenCount": {"guessedname": "tweenCount", "type": "Int", "description": "The number of active animations.", "private": "", "guessedtype": "property"}, "delay": {"type": "Int", "description": "Interval delay in milliseconds, defaults to fastest possible.", "guessedname": "delay", "guessedtype": "property"}, "fps": {"type": "Int", "description": "Base frame rate (frames per second). \nArbitrarily high for better x-browser calibration (slower browsers drop more frames).", "guessedname": "fps", "guessedtype": "property"}, "thread": {"guessedname": "thread", "type": "Int", "description": "Reference to the animation Interval.", "private": "", "guessedtype": "property"}}, "description": "Handles animation queueing and threading.\nUsed by Anim and subclasses."}, "YAHOO.util.ColorAnim": {"name": "YAHOO.util.ColorAnim", "constructors": [{"params": [{"type": "HTMLElement | String", "name": "el", "description": " Reference to the element that will be animated"}, {"type": "Object", "name": "attributes", "description": " The attribute(s) to be animated.\nEach attribute is an object with at minimum a \"to\" or \"by\" member defined.\nAdditional optional members are \"from\" (defaults to current value), \"units\" (defaults to \"px\").\nAll attribute names use camelCase."}, {"type": "Number", "name": "duration", "description": " (optional, defaults to 1 second) Length of animation (frames or seconds), defaults to time-based"}, {"type": "Function", "name": "method", "description": " (optional, defaults to YAHOO.util.Easing.easeNone) Computes the values that are applied to the attributes per frame (generally a YAHOO.util.Easing method)"}], "description": "Anim subclass for color transitions.\n<p>Usage: <code>var myAnim = new Y.ColorAnim(el, { backgroundColor: { from: '#FF0000', to: '#FFFFFF' } }, 1, Y.Easing.easeOut);<\/code> Color values can be specified with either 112233, #112233, \n[255,255,255], or rgb(255,255,255)<\/p>"}], "namespace": "YAHOO.util", "module": "animation", "methods": {"parseColor": {"return": {"type": "Array", "description": "The 3-tuple of rgb values."}, "params": [{"type": "String", "name": "s", "description": " The string to parse."}], "description": "Attempts to parse the given string and return a 3-tuple.", "guessedname": "parseColor", "guessedtype": "function"}}, "extends": "YAHOO.util.Anim", "superclass": "YAHOO.util.Anim", "file": "ColorAnim.js", "shortname": "ColorAnim", "requires": "YAHOO.util.Anim", "description": "Anim subclass for color transitions.\n<p>Usage: <code>var myAnim = new Y.ColorAnim(el, { backgroundColor: { from: '#FF0000', to: '#FFFFFF' } }, 1, Y.Easing.easeOut);<\/code> Color values can be specified with either 112233, #112233, \n[255,255,255], or rgb(255,255,255)<\/p>"}, "YAHOO.util.Anim": {"name": "YAHOO.util.Anim", "constructors": [{"params": [{"type": "String | HTMLElement", "name": "el", "description": " Reference to the element that will be animated"}, {"type": "Object", "name": "attributes", "description": " The attribute(s) to be animated.  \nEach attribute is an object with at minimum a \"to\" or \"by\" member defined.  \nAdditional optional members are \"from\" (defaults to current value), \"units\" (defaults to \"px\").  \nAll attribute names use camelCase."}, {"type": "Number", "name": "duration", "description": " (optional, defaults to 1 second) Length of animation (frames or seconds), defaults to time-based"}, {"type": "Function", "name": "method", "description": " (optional, defaults to YAHOO.util.Easing.easeNone) Computes the values that are applied to the attributes per frame (generally a YAHOO.util.Easing method)"}], "description": "Base animation class that provides the interface for building animated effects.\n<p>Usage: var myAnim = new YAHOO.util.Anim(el, { width: { from: 10, to: 100 } }, 1, YAHOO.util.Easing.easeOut);<\/p>"}], "namespace": "YAHOO.util", "module": "animation", "events": {"onComplete": {"description": "Custom event that fires when animation ends\nListen via subscribe method (e.g. myAnim.onComplete.subscribe(someFunction)", "guessedname": "onComplete", "guessedtype": "property"}, "onStart": {"description": "Custom event that fires when animation begins\nListen via subscribe method (e.g. myAnim.onStart.subscribe(someFunction)", "guessedname": "onStart", "guessedtype": "property"}, "onTween": {"description": "Custom event that fires between each frame\nListen via subscribe method (e.g. myAnim.onTween.subscribe(someFunction)", "guessedname": "onTween", "guessedtype": "property"}}, "guessedname": "Anim", "methods": {"isAnimated": {"return": {"type": "Boolean", "description": "current value of isAnimated."}, "description": "Checks whether the element is currently animated.", "guessedname": "isAnimated", "guessedtype": "function"}, "setRuntimeAttribute\nShould only be needed for subclass use.": {"guessedname": "setRuntimeAttribute", "params": [{"type": "Object", "name": "attr", "description": " The attribute object"}], "description": "Sets the actual values to be used during the animation.", "private": "", "guessedtype": "function"}, "getAttribute": {"return": {"type": "Number", "description": "val The current value of the attribute."}, "params": [{"type": "String", "name": "attr", "description": " The name of the attribute."}], "description": "Returns current value of the attribute.", "guessedname": "getAttribute", "guessedtype": "function"}, "setAttribute": {"params": [{"type": "String", "name": "attr", "description": " The name of the attribute."}, {"type": "Number", "name": "val", "description": " The value to be applied to the attribute."}, {"type": "String", "name": "unit", "description": " The unit ('px', '%', etc.) of the value."}], "description": "Applies a value to an attribute.", "guessedname": "setAttribute", "guessedtype": "function"}, "onTween": {"private": "", "description": "Feeds the starting and ending values for each animated attribute to doMethod once per frame, then applies the resulting value to the attribute(s).", "guessedname": "onTween", "guessedtype": "function"}, "doMethod": {"return": {"type": "Number", "description": "The Value to be applied to the attribute."}, "params": [{"type": "String", "name": "attr", "description": " The name of the attribute."}, {"type": "Number", "name": "start", "description": " The value this attribute should start from for this animation."}, {"type": "Number", "name": "end", "description": "  The value this attribute should end at for this animation."}], "description": "Returns the value computed by the animation's \"method\".", "guessedname": "doMethod", "guessedtype": "function"}, "getEl": {"return": {"type": "HTMLElement", "description": ""}, "description": "Returns a reference to the animated element.", "guessedname": "getEl", "guessedtype": "function"}, "stop": {"params": [{"type": "Boolean", "name": "finish", "description": " (optional) If true, animation will jump to final frame."}], "description": "Stops the animation.  Normally called by AnimMgr when animation completes.", "guessedname": "stop", "guessedtype": "function"}, "init": {"params": [{"type": "String | HTMLElement", "name": "el", "description": " Reference to the element that will be animated"}, {"type": "Object", "name": "attributes", "description": " The attribute(s) to be animated.  \nEach attribute is an object with at minimum a \"to\" or \"by\" member defined.  \nAdditional optional members are \"from\" (defaults to current value), \"units\" (defaults to \"px\").  \nAll attribute names use camelCase."}, {"type": "Number", "name": "duration", "description": " (optional, defaults to 1 second) Length of animation (frames or seconds), defaults to time-based"}, {"type": "Function", "name": "method", "description": " (optional, defaults to YAHOO.util.Easing.easeNone) Computes the values that are applied to the attributes per frame (generally a YAHOO.util.Easing method)"}], "description": "Constructor for Anim instance.", "guessedname": "init", "guessedtype": "function"}, "toString": {"return": {"type": "String", "description": ""}, "description": "Provides a readable name for the Anim instance.", "guessedname": "toString", "guessedtype": "function"}, "getDefaultUnit": {"return": {"type": "String", "description": "The default unit to be used."}, "params": [{"type": "attr", "name": "attr", "description": " The name of the attribute."}], "description": "Returns the unit to use when none is supplied.", "guessedname": "getDefaultUnit", "guessedtype": "function"}, "animate": {"description": "Starts the animation by registering it with the animation manager.", "guessedname": "animate", "guessedtype": "function"}, "getStartTime": {"return": {"type": "Date", "description": "current value of startTime."}, "description": "Returns the animation start time.", "guessedname": "getStartTime", "guessedtype": "function"}}, "file": "Anim.js", "guessedtype": "function", "shortname": "Anim", "requires": "YAHOO.util.AnimMgr", "properties": {"isAnimated": {"guessedname": "isAnimated", "type": "Boolean", "description": "Whether or not the animation is running.", "private": "", "guessedtype": "property"}, "_onTween": {"private": "", "description": "Custom event that fires after onTween", "guessedname": "_onTween", "guessedtype": "property"}, "el": {"guessedname": "el", "type": "HTMLElement", "description": "The element to be animated.", "private": "", "guessedtype": "property"}, "actualFrames": {"guessedname": "actualFrames", "type": "Int", "description": "The number of frames this animation was able to execute.", "private": "", "guessedtype": "property"}, "useSeconds": {"type": "Boolean", "description": "Whether or not the duration should be treated as seconds.\nDefaults to true.", "guessedname": "useSeconds", "guessedtype": "property"}, "totalFrames": {"type": "Int", "description": "The total number of frames to be executed.\nIn time-based animations, this is used by AnimMgr to ensure the animation finishes on time.", "guessedname": "totalFrames", "guessedtype": "property"}, "_onStart": {"private": "", "description": "Custom event that fires after onStart, useful in subclassing", "guessedname": "_onStart", "guessedtype": "property"}, "_onComplete": {"private": "", "description": "Custom event that fires after onComplete", "guessedname": "_onComplete", "guessedtype": "property"}, "startTime": {"guessedname": "startTime", "type": "Date", "description": "A Date object that is created when the animation begins.", "private": "", "guessedtype": "property"}, "duration": {"type": "Number", "description": "The length of the animation.  Defaults to \"1\" (second).", "guessedname": "duration", "guessedtype": "property"}, "attributes": {"type": "Object", "description": "The collection of attributes to be animated.  \nEach attribute must have at least a \"to\" or \"by\" defined in order to animate.  \nIf \"to\" is supplied, the animation will end with the attribute at that value.  \nIf \"by\" is supplied, the animation will end at that value plus its starting value. \nIf both are supplied, \"to\" is used, and \"by\" is ignored. \nOptional additional member include \"from\" (the value the attribute should start animating from, defaults to current value), and \"unit\" (the units to apply to the values).", "guessedname": "attributes", "guessedtype": "property"}, "method": {"type": "Function", "description": "The method that will provide values to the attribute(s) during the animation. \nDefaults to \"YAHOO.util.Easing.easeNone\".", "guessedname": "method", "guessedtype": "property"}, "currentFrame": {"type": "Int", "description": "The location of the current animation on the timeline.\nIn time-based animations, this is used by AnimMgr to ensure the animation finishes on time.", "guessedname": "currentFrame", "guessedtype": "property"}}, "description": "Base animation class that provides the interface for building animated effects.\n<p>Usage: var myAnim = new YAHOO.util.Anim(el, { width: { from: 10, to: 100 } }, 1, YAHOO.util.Easing.easeOut);<\/p>"}, "YAHOO.util.Easing": {"name": "YAHOO.util.Easing", "namespace": "YAHOO.util", "module": "animation", "guessedname": "Easing", "methods": {"easeIn": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}], "description": "Begins slowly and accelerates towards end. (quadratic)", "guessedname": "easeIn", "guessedtype": "function"}, "easeInStrong": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}], "description": "Begins slowly and accelerates towards end. (quartic)", "guessedname": "easeInStrong", "guessedtype": "function"}, "bounceBoth": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}], "description": "Bounces off start and end.", "guessedname": "bounceBoth", "guessedtype": "function"}, "backOut": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}, {"type": "Number", "name": "s", "description": " Overshoot (optional)"}], "description": "Overshoots end, then reverses and comes back to end.", "guessedname": "backOut", "guessedtype": "function"}, "elasticBoth": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}, {"type": "Number", "name": "p", "description": " Period (optional)"}], "description": "Snap both elastic effect.", "guessedname": "elasticBoth", "guessedtype": "function"}, "elasticOut": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}, {"type": "Number", "name": "p", "description": " Period (optional)"}], "description": "Snap out elastic effect.", "guessedname": "elasticOut", "guessedtype": "function"}, "bounceOut": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}], "description": "Bounces off end.", "guessedname": "bounceOut", "guessedtype": "function"}, "backBoth": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}, {"type": "Number", "name": "s", "description": " Overshoot (optional)"}], "description": "Backtracks slightly, then reverses direction, overshoots end, \nthen reverses and comes back to end.", "guessedname": "backBoth", "guessedtype": "function"}, "easeBoth": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}], "description": "Begins slowly and decelerates towards end. (quadratic)", "guessedname": "easeBoth", "guessedtype": "function"}, "bounceIn": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}], "description": "Bounce off of start.", "guessedname": "bounceIn", "guessedtype": "function"}, "easeOutStrong": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}], "description": "Begins quickly and decelerates towards end.  (quartic)", "guessedname": "easeOutStrong", "guessedtype": "function"}, "easeNone": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}], "description": "Uniform speed between points.", "guessedname": "easeNone", "guessedtype": "function"}, "elasticIn": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}, {"type": "Number", "name": "p", "description": " Period (optional)"}], "description": "Snap in elastic effect.", "guessedname": "elasticIn", "guessedtype": "function"}, "easeBothStrong": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}], "description": "Begins slowly and decelerates towards end. (quartic)", "guessedname": "easeBothStrong", "guessedtype": "function"}, "easeOut": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}], "description": "Begins quickly and decelerates towards end.  (quadratic)", "guessedname": "easeOut", "guessedtype": "function"}, "backIn": {"return": {"type": "Number", "description": "The computed value for the current animation frame"}, "params": [{"type": "Number", "name": "t", "description": " Time value used to compute current value"}, {"type": "Number", "name": "b", "description": " Starting value"}, {"type": "Number", "name": "c", "description": " Delta between start and end values"}, {"type": "Number", "name": "d", "description": " Total length of animation"}, {"type": "Number", "name": "s", "description": " Overshoot (optional)"}], "description": "Backtracks slightly, then reverses direction and moves to end.", "guessedname": "backIn", "guessedtype": "function"}}, "file": "Easing.js", "guessedtype": "property", "shortname": "Easing", "description": "Singleton that determines how an animation proceeds from start to end."}, "YAHOO.util.Motion": {"name": "YAHOO.util.Motion", "constructors": [{"params": [{"type": "String | HTMLElement", "name": "el", "description": " Reference to the element that will be animated"}, {"type": "Object", "name": "attributes", "description": " The attribute(s) to be animated.  \nEach attribute is an object with at minimum a \"to\" or \"by\" member defined.  \nAdditional optional members are \"from\" (defaults to current value), \"units\" (defaults to \"px\").  \nAll attribute names use camelCase."}, {"type": "Number", "name": "duration", "description": " (optional, defaults to 1 second) Length of animation (frames or seconds), defaults to time-based"}, {"type": "Function", "name": "method", "description": " (optional, defaults to YAHOO.util.Easing.easeNone) Computes the values that are applied to the attributes per frame (generally a YAHOO.util.Easing method)"}], "description": "Anim subclass for moving elements along a path defined by the \"points\" \nmember of \"attributes\".  All \"points\" are arrays with x, y coordinates.\n<p>Usage: <code>var myAnim = new YAHOO.util.Motion(el, { points: { to: [800, 800] } }, 1, YAHOO.util.Easing.easeOut);<\/code><\/p>"}], "namespace": "YAHOO.util", "module": "animation", "extends": "YAHOO.util.Anim", "superclass": "YAHOO.util.Anim", "file": "Motion.js", "shortname": "Motion", "requires": "YAHOO.util.Anim", "description": "Anim subclass for moving elements along a path defined by the \"points\" \nmember of \"attributes\".  All \"points\" are arrays with x, y coordinates.\n<p>Usage: <code>var myAnim = new YAHOO.util.Motion(el, { points: { to: [800, 800] } }, 1, YAHOO.util.Easing.easeOut);<\/code><\/p>"}}, "modules": {"animation": {"classlist": ["YAHOO.util.Anim", "YAHOO.util.AnimMgr", "YAHOO.util.Bezier", "YAHOO.util.Motion", "YAHOO.util.Easing", "YAHOO.util.Scroll", "YAHOO.util.ColorAnim"], "name": "animation", "filelist": ["Anim.js", "AnimMgr.js", "Bezier.js", "Motion.js", "Easing.js", "Scroll.js", "ColorAnim.js"], "description": "The animation module provides allows effects to be added to HTMLElements."}}, "namespaces": ["YAHOO.util"], "filemap": {"AnimMgr.js": {"classlist": ["YAHOO.util.AnimMgr"], "name": "AnimMgr.js", "module": "animation"}, "ColorAnim.js": {"classlist": ["YAHOO.util.ColorAnim"], "name": "ColorAnim.js", "module": "animation"}, "Easing.js": {"classlist": ["YAHOO.util.Easing"], "name": "Easing.js", "module": "animation"}, "Anim.js": {"classlist": ["YAHOO.util.Anim"], "name": "Anim.js", "module": "animation"}, "Bezier.js": {"classlist": ["YAHOO.util.Bezier"], "name": "Bezier.js", "module": "animation"}, "Motion.js": {"classlist": ["YAHOO.util.Motion"], "name": "Motion.js", "module": "animation"}, "Scroll.js": {"classlist": ["YAHOO.util.Scroll"], "name": "Scroll.js", "module": "animation"}}}